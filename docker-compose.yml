version: '3.8'

services:
  # Database service
  postgres:
    image: postgres:14-alpine
    container_name: redit-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: social_platform
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
      - ./sample_data.sql:/docker-entrypoint-initdb.d/sample_data.sql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - redit-network

  # Backend services
  user-service:
    build:
      context: ./monorepo-root/services/user-service
      dockerfile: Dockerfile
    container_name: redit-user-service
    restart: always
    ports:
      - "3010:3010"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=social_platform
      - PORT=3010
      - NODE_ENV=development
      - JWT_SECRET=your-secret-key
    depends_on:
      - postgres
    networks:
      - redit-network

  post-service:
    build:
      context: ./monorepo-root/services/post-service
      dockerfile: Dockerfile
    container_name: redit-post-service
    restart: always
    ports:
      - "3002:3002"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=social_platform
      - PORT=3002
      - NODE_ENV=development
      - JWT_SECRET=your-secret-key
      - TEST_MODE=true
    depends_on:
      - postgres
    networks:
      - redit-network

  community-service:
    build:
      context: ./monorepo-root/services/community-service
      dockerfile: Dockerfile
    container_name: redit-community-service
    restart: always
    ports:
      - "3005:3005"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=social_platform
      - PORT=3005
      - NODE_ENV=development
      - JWT_SECRET=your-secret-key
      - TEST_MODE=true
    depends_on:
      - postgres
    networks:
      - redit-network

  # Frontend service
  frontend:
    build:
      context: ./redkitfrontend
      dockerfile: Dockerfile
    container_name: redit-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_USER_API_URL=http://user-service:3010
      - NEXT_PUBLIC_POST_API_URL=http://post-service:3002
      - NEXT_PUBLIC_COMMUNITY_API_URL=http://community-service:3005
    depends_on:
      - user-service
      - post-service
      - community-service
    networks:
      - redit-network

networks:
  redit-network:
    driver: bridge

volumes:
  postgres_data: 